.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  animation: fadeIn 0.2s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.modal {
  width: 90%;
  max-width: 600px;
  max-height: 95vh; /* Increase max height to accommodate proper spacing */
  min-height: 500px; /* Ensure minimum height for proper layout */
  background: var(--gradient-card);
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-xl);
  box-shadow: var(--shadow-card-hover);
  overflow: hidden;
  animation: slideIn 0.3s ease-out;
}

@media (min-width: 1024px) {
  .modal {
    width: 600px;
    max-width: none;
  }
}

@keyframes slideIn {
  from { 
    opacity: 0;
    transform: translateY(-20px) scale(0.95);
  }
  to { 
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--spacing-2xl);
  border-bottom: 1px solid var(--color-border);
}

.title {
  font-size: var(--font-size-2xl);
  font-weight: var(--font-weight-bold);
  color: var(--color-text-primary);
  margin: 0;
  background: var(--gradient-primary);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.closeButton {
  width: 32px;
  height: 32px;
  border: none;
  background: var(--color-surface);
  color: var(--color-text-muted);
  border-radius: var(--radius-md);
  font-size: var(--font-size-lg);
  cursor: pointer;
  transition: all var(--transition-base);
  display: flex;
  align-items: center;
  justify-content: center;
}

.closeButton:hover {
  background: var(--color-border);
  color: var(--color-text-primary);
  transform: scale(1.05);
}

.form {
  padding: var(--spacing-2xl);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xl); /* Increased gap between form fields */
  max-height: calc(95vh - 160px); /* Increase to match modal height */
  overflow-y: auto;
  position: relative;
  padding-bottom: var(--spacing-6xl); /* Much larger bottom padding to prevent button overlap */
}

@media (min-width: 1024px) {
  .form {
    gap: var(--spacing-xl);
    max-height: calc(95vh - 140px); /* Increase form height to match modal */
    overflow-y: visible;
    padding-bottom: var(--spacing-5xl); /* Ensure adequate bottom padding on desktop */
  }
}

.field {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.field:last-of-type {
  margin-bottom: var(--spacing-4xl); /* Extra margin for the last field (Due Date) */
}

.fieldRow {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--spacing-lg);
}

.label {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-secondary);
  margin-bottom: var(--spacing-xs);
}

.input,
.textarea,
.select {
  padding: var(--spacing-md) var(--spacing-lg);
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-md);
  color: var(--color-text-primary);
  font-size: var(--font-size-base);
  transition: all var(--transition-base);
}

.input:focus,
.textarea:focus,
.select:focus {
  outline: none;
  border-color: rgba(139, 92, 246, 0.5);
  box-shadow: 0 0 0 2px rgba(139, 92, 246, 0.1);
}

.input::placeholder,
.textarea::placeholder {
  color: var(--color-text-muted);
}

.textarea {
  resize: vertical;
  min-height: 80px;
  font-family: inherit;
}

.select {
  cursor: pointer;
}

.select option {
  background: var(--color-background);
  color: var(--color-text-primary);
}

.actions {
  display: flex !important;
  gap: var(--spacing-lg);
  justify-content: flex-end;
  padding: var(--spacing-xl) var(--spacing-2xl); /* Add horizontal padding too */
  border-top: 1px solid var(--color-border);
  margin-top: var(--spacing-4xl); /* Much larger margin to prevent overlap */
  flex-shrink: 0;
  position: sticky;
  bottom: 0;
  background: var(--gradient-card);
  z-index: 10;
  backdrop-filter: blur(20px); /* Add backdrop filter for better separation */
  -webkit-backdrop-filter: blur(20px);
}

.cancelButton,
.createButton {
  padding: var(--spacing-md) var(--spacing-2xl);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-md);
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-medium);
  cursor: pointer;
  transition: all var(--transition-base);
  min-width: 100px;
  flex-shrink: 0;
  display: block !important;
}

.cancelButton {
  background: transparent;
  color: var(--color-text-secondary);
}

.cancelButton:hover:not(:disabled) {
  background: var(--color-surface);
  color: var(--color-text-primary);
}

.createButton {
  background: var(--gradient-primary);
  color: white;
  border-color: transparent;
}

.createButton:hover:not(:disabled) {
  transform: translateY(-1px);
  box-shadow: var(--shadow-glow);
}

.createButton:disabled,
.cancelButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
}

/* Mobile responsiveness */
@media (max-width: 768px) {
  .modal {
    width: 95%;
    margin: var(--spacing-lg);
  }
  
  .header,
  .form {
    padding: var(--spacing-lg);
  }
  
  .fieldRow {
    grid-template-columns: 1fr;
    gap: var(--spacing-md);
  }
  
  .actions {
    flex-direction: column;
  }
  
  .cancelButton,
  .createButton {
    width: 100%;
  }
} 