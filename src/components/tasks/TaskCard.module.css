.card {
  background: var(--gradient-card);
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-lg);
  padding: var(--spacing-xl);
  margin-bottom: var(--spacing-lg);
  cursor: pointer;
  transition: all var(--transition-base);
  box-shadow: var(--shadow-card);
  width: 100%; /* Ensure full width utilization */
  max-width: none; /* Remove any width constraints */
  box-sizing: border-box; /* Include padding in width calculation */
}

.card:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-card-hover);
  border-color: rgba(139, 92, 246, 0.3);
}

.card:active {
  transform: translateY(-2px) scale(0.98);
}

.header {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  gap: var(--spacing-lg);
  margin-bottom: var(--spacing-lg);
}

.statusSection {
  display: flex;
  align-items: flex-start;
  gap: var(--spacing-md);
  flex: 1;
}

.statusButton {
  width: 32px;
  height: 32px;
  border-radius: var(--radius-md);
  border: none;
  background: var(--color-surface);
  font-size: var(--font-size-lg);
  cursor: pointer;
  transition: all var(--transition-base);
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
}

.statusButton:hover {
  background: var(--gradient-primary);
  transform: scale(1.1);
  box-shadow: var(--shadow-glow);
}

.taskInfo {
  flex: 1;
  min-width: 0;
}

.title {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-primary);
  margin-bottom: var(--spacing-sm);
  line-height: 1.4;
  word-wrap: break-word;
}

.description {
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
  line-height: 1.5;
  word-wrap: break-word;
}

.cardActions {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.priorityBadge {
  padding: var(--spacing-xs) var(--spacing-md);
  border-radius: var(--radius-xl);
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-semibold);
  text-transform: uppercase;
  letter-spacing: 0.05em;
  color: var(--color-background);
  flex-shrink: 0;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.expandButton {
  background: none;
  border: none;
  color: var(--color-text-muted);
  font-size: var(--font-size-sm);
  cursor: pointer;
  padding: var(--spacing-xs);
  border-radius: var(--radius-sm);
  transition: all var(--transition-base);
}

.expandButton:hover {
  color: var(--color-text-primary);
  background: var(--color-surface);
}

.progress {
  margin-bottom: var(--spacing-lg);
}

.progressInfo {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-sm);
}

.progressText {
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
  font-weight: var(--font-weight-medium);
}

.progressPercentage {
  font-size: var(--font-size-sm);
  color: var(--color-text-primary);
  font-weight: var(--font-weight-semibold);
}

.progressBar {
  height: 6px;
  background: var(--color-surface);
  border-radius: var(--radius-sm);
  overflow: hidden;
  position: relative;
}

.progressFill {
  height: 100%;
  background: var(--gradient-primary);
  border-radius: var(--radius-sm);
  transition: width var(--transition-base);
  position: relative;
}

.progressFill::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  animation: shimmer 2s infinite;
}

@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

.footer {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-top: var(--spacing-md);
  border-top: 1px solid var(--color-border);
}

.dueDate {
  font-size: var(--font-size-sm);
  color: var(--color-text-muted);
  font-weight: var(--font-weight-medium);
}

/* Status-specific styles */
.status-todo {
  border-left: 4px solid #64748b;
}

.status-in-progress {
  border-left: 4px solid #f59e0b;
}

.status-done {
  border-left: 4px solid #10b981;
  opacity: 0.8;
}

.status-done .title {
  text-decoration: line-through;
  color: var(--color-text-muted);
}

/* Desktop optimization for task cards */
@media (min-width: 1440px) {
  .card {
    padding: var(--spacing-2xl); /* More generous padding on desktop */
  }
  
  .title {
    font-size: var(--font-size-xl); /* Larger title on desktop */
    line-height: 1.3;
  }
  
  .description {
    font-size: var(--font-size-base); /* Larger description text */
    line-height: 1.6;
  }
  
  .statusButton {
    width: 36px;
    height: 36px;
  }
}

/* Responsive design */
@media (max-width: 768px) {
  .card {
    padding: var(--spacing-lg);
  }
  
  .header {
    flex-direction: column;
    gap: var(--spacing-md);
  }
  
  .statusSection {
    width: 100%;
  }
  
  .priorityBadge {
    align-self: flex-start;
  }
}

/* Subtasks Section */
.subtasksSection {
  margin-top: var(--spacing-lg);
  padding-top: var(--spacing-lg);
  border-top: 1px solid var(--color-border);
}

.subtasksList {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
  margin-bottom: var(--spacing-lg);
}

.subtaskItem {
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
  padding: var(--spacing-sm) 0;
}

.subtaskCheckbox {
  width: 16px;
  height: 16px;
  border-radius: var(--radius-sm);
  border: 2px solid var(--color-border);
  background: transparent;
  cursor: pointer;
  position: relative;
  transition: all var(--transition-base);
}

.subtaskCheckbox:checked {
  background: var(--gradient-primary);
  border-color: transparent;
}

.subtaskCheckbox:checked::before {
  content: 'âœ“';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 10px;
  font-weight: bold;
}

.subtaskTitle {
  flex: 1;
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
  transition: all var(--transition-base);
}

.subtaskTitle.completed {
  text-decoration: line-through;
  color: var(--color-text-muted);
}

.subtaskInput {
  width: 100%;
  padding: var(--spacing-sm) var(--spacing-md);
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-md);
  color: var(--color-text-primary);
  font-size: var(--font-size-sm);
  transition: all var(--transition-base);
}

.subtaskInput:focus {
  outline: none;
  border-color: rgba(139, 92, 246, 0.5);
  box-shadow: 0 0 0 2px rgba(139, 92, 246, 0.1);
}

.subtaskInput::placeholder {
  color: var(--color-text-muted);
} 